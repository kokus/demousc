/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/
"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _regeneratorRuntime() { "use strict"; _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator.return && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var _wp = wp,
  blocks = _wp.blocks,
  data = _wp.data,
  element = _wp.element,
  components = _wp.components,
  editor = _wp.editor,
  blockEditor = _wp.blockEditor;
var registerBlockType = blocks.registerBlockType;
var dispatch = data.dispatch,
  select = data.select,
  useSelect = data.useSelect;
var Fragment = element.Fragment;
var Toolbar = components.Toolbar,
  Placeholder = components.Placeholder,
  ToggleControl = components.ToggleControl,
  PanelBody = components.PanelBody,
  TextareaControl = components.TextareaControl,
  RangeControl = components.RangeControl;
var RichText = blockEditor.RichText,
  InspectorControls = blockEditor.InspectorControls,
  BlockIcon = blockEditor.BlockIcon,
  TextControl = blockEditor.TextControl,
  InnerBlocks = blockEditor.InnerBlocks,
  PanelColorSettings = blockEditor.PanelColorSettings,
  AlignmentToolbar = blockEditor.AlignmentToolbar;
var __ = Drupal.t;
var icon = {
  title: __('Icon'),
  description: __('Icon with theme variants'),
  icon: 'format-image',
  attributes: {
    iconType: {
      type: "string",
      default: 'usa-icon--size-3'
    },
    mediaEntity: {
      type: 'object',
      default: {}
    },
    mediaEntityId: {
      type: 'integer'
    },
    allowedTypes: {
      type: 'array',
      default: ['image']
    },
    imageAlt: {
      type: 'string',
      default: ''
    },
    svgColor: {
      type: 'string',
      default: '#000000'
    },
    backgroundColor: _defineProperty({
      type: 'string'
    }, "type", 'transparent'),
    align: {
      type: 'string',
      default: 'left'
    }
  },
  edit: function edit(_ref) {
    var attributes = _ref.attributes,
      className = _ref.className,
      setAttributes = _ref.setAttributes,
      isSelected = _ref.isSelected,
      clientId = _ref.clientId;
    var align = attributes.align,
      iconType = attributes.iconType,
      imageAlt = attributes.imageAlt,
      mediaEntityId = attributes.mediaEntityId,
      mediaEntity = attributes.mediaEntity,
      svgColor = attributes.svgColor,
      backgroundColor = attributes.backgroundColor;
    var isParentOfSelectedBlock = useSelect(function (select) {
      return select('core/block-editor').hasSelectedInnerBlock(clientId, true);
    });
    var isSelectedOrChild = isSelected || isParentOfSelectedBlock;
    var descriptionClass = ' usa-icon-container';
    var bodyClass = 'usa-icon__body';
    var loading = false;
    var instructions = __('Select a media icon from the media library.');
    var placeholderClassName = ['block-editor-media-placeholder', 'editor-media-placeholder'].join(' ');
    var getIconEntity = function () {
      var _ref2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(item) {
        var response, _mediaEntity;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return fetch(Drupal.url("gutenberg/media/load-media/".concat(item)));
            case 2:
              response = _context.sent;
              if (!response.ok) {
                _context.next = 9;
                break;
              }
              _context.next = 6;
              return response.json();
            case 6:
              _mediaEntity = _context.sent;
              if (!_mediaEntity) {
                _context.next = 9;
                break;
              }
              return _context.abrupt("return", _mediaEntity);
            case 9:
              if (!(response.status === 404)) {
                _context.next = 12;
                break;
              }
              Drupal.notifyError("Media entity couldn't be found.");
              return _context.abrupt("return", null);
            case 12:
              if (response.ok) {
                _context.next = 15;
                break;
              }
              Drupal.notifyError('An error occurred while fetching data.');
              return _context.abrupt("return", null);
            case 15:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      return function getIconEntity(_x) {
        return _ref2.apply(this, arguments);
      };
    }();
    var insertIconMedia = function insertIconMedia(mediaEntityId) {
      if (isNaN(mediaEntityId)) {
        var regex = /\((\d*)\)$/;
        var match = regex.exec(mediaEntityId);
        mediaEntityId = match[1];
      }
      getIconEntity(mediaEntityId).then(function (media) {
        setAttributes({
          mediaEntityId: Number(media.id),
          mediaEntity: media
        });
      });
    };
    var objectClass = 'usa-icon ' + iconType;
    var uniqueId = 'media-icon-' + mediaEntityId;
    var title = '<title id="' + uniqueId + '">' + imageAlt + '</title>';
    return React.createElement(Fragment, null, mediaEntityId ? React.createElement("div", {
      className: className + descriptionClass,
      style: {
        textAlign: align
      }
    }, React.createElement(Fragment, null, React.createElement("svg", {
      class: objectClass,
      "aria-hidden": "true",
      "aria-labelledby": uniqueId,
      dangerouslySetInnerHTML: {
        __html: mediaEntity.svg + title
      },
      viewBox: "0 0 24 24",
      fillColor: svgColor,
      style: {
        backgroundColor: backgroundColor,
        color: svgColor
      }
    })), React.createElement(InspectorControls, null, React.createElement(Fragment, null, React.createElement(PanelBody, {
      title: __('Layout')
    }, React.createElement(SelectControl, {
      label: __('Icon Size'),
      value: iconType,
      options: [{
        label: '3 unit',
        value: 'usa-icon--size-3'
      }, {
        label: '4 unit',
        value: 'usa-icon--size-4'
      }, {
        label: '5 unit',
        value: 'usa-icon--size-5'
      }, {
        label: '6 unit',
        value: 'usa-icon--size-6'
      }, {
        label: '7 unit',
        value: 'usa-icon--size-7'
      }, {
        label: '8 unit',
        value: 'usa-icon--size-8'
      }, {
        label: '9 unit',
        value: 'usa-icon--size-9'
      }],
      onChange: function onChange(nextLayout) {
        setAttributes({
          iconType: nextLayout
        });
      }
    })), React.createElement(PanelColorSettings, {
      title: __('Color Settings'),
      initialOpen: true,
      colorSettings: [{
        value: svgColor,
        onChange: function onChange(value) {
          return setAttributes({
            svgColor: value
          });
        },
        label: __('Icon Color'),
        disableCustomColors: true
      }, {
        value: backgroundColor,
        onChange: function onChange(value) {
          return setAttributes({
            backgroundColor: value
          });
        },
        label: __('Background Color'),
        disableCustomColors: true,
        colors: [{
          name: 'black',
          color: '#000000'
        }, {
          name: 'white',
          color: '#ffffff'
        }]
      }]
    }))), React.createElement(BlockControls, null, React.createElement(Toolbar, {
      controls: [{
        icon: 'no',
        title: __('Clear media'),
        onClick: function onClick() {
          return setAttributes({
            mediaEntityId: null,
            mediaEntity: null
          });
        }
      }]
    }, loading && React.createElement("div", {
      className: "ajax-progress ajax-progress-throbber"
    }, React.createElement("div", {
      className: "throbber"
    }, "\xA0"))), React.createElement(AlignmentToolbar, {
      value: align,
      onChange: function onChange(nextAlign) {
        return setAttributes({
          align: nextAlign
        });
      }
    }))) : React.createElement(Placeholder, {
      icon: React.createElement(BlockIcon, {
        icon: "admin-media"
      }),
      label: __('Icon'),
      instructions: instructions,
      className: placeholderClassName
    }, React.createElement(MediaUpload, {
      onSelect: insertIconMedia,
      allowedTypes: attributes.allowedTypes,
      allowedBundles: ['icon'],
      multiple: false,
      handlesMediaEntity: true
    })));
  },
  save: function save(_ref3) {
    var className = _ref3.className,
      attributes = _ref3.attributes;
    var align = attributes.align,
      iconType = attributes.iconType,
      imageAlt = attributes.imageAlt,
      mediaEntityId = attributes.mediaEntityId,
      mediaEntity = attributes.mediaEntity,
      svgColor = attributes.svgColor,
      backgroundColor = attributes.backgroundColor;
    return React.createElement(InnerBlocks.Content, null);
  }
};
var category = {
  slug: 'uswds',
  title: __('USWDS')
};
var currentCategories = select('core/blocks').getCategories().filter(function (item) {
  return item.slug !== category.slug;
});
dispatch('core/blocks').setCategories([category].concat(_toConsumableArray(currentCategories)));
registerBlockType("".concat(category.slug, "/icon"), _objectSpread({
  category: category.slug
}, icon));