services:
  php:
    image: tugboatqa/php:8.1-apache

    # Set this as the default service. This does a few things
    #   1. Clones the git repository into the service container
    #   2. Exposes port 80 to the Tugboat HTTP proxy
    #   3. Routes requests to the preview URL to this service
    default: true

    # Wait until the mysql service is done building
    depends: mysql

    # A set of commands to run while building this service
    commands:
      # Commands that set up the basic preview infrastructure
      init:
        # Install opcache and mod-rewrite.
        - docker-php-ext-install opcache
        - a2enmod headers rewrite

        # Link the document root to the expected path. This example links /web
        # to the docroot.
        - ln -snf "${TUGBOAT_ROOT}/web" "${DOCROOT}"

        # Create the Drupal private files and config directories if they aren't
        # already present.
        - mkdir -p "${TUGBOAT_ROOT}/files-private"

      # Commands that import files, databases,  or other assets. When an
      # existing preview is refreshed, the build workflow starts here,
      # skipping the init step, because the results of that step will
      # already be present.
      update:
        # Install/update packages managed by composer, including drush.
        - composer install --optimize-autoloader

        # Use the tugboat-specific Drupal settings.
        - rm -rf "${DOCROOT}/sites/default/settings.db.php"
        - cp "${TUGBOAT_ROOT}/.tugboat/settings.local.php" "${DOCROOT}/sites/default/settings.db.php"

        # Set file permissions such that Drupal will not complain
        - chgrp -R www-data "${DOCROOT}/sites"
        - find "${DOCROOT}/sites" -type d -exec chmod 2775 {} \;
        - find "${DOCROOT}/sites" -type f -exec chmod 0664 {} \;

      build:
        - vendor/bin/drush deploy
        - vendor/bin/drush user:create tugboat_admin --mail='tugboat_ad@example.com' --password='tugboat'
        - vendor/bin/drush user:role:add 'administrator' tugboat_admin

  # This 'mysql' key acts as the hostname to access the service by from the php service.
  mysql:
    image: tugboatqa/mariadb:10.5

    # A set of commands to run while building this service
    commands:
      # Configure the server for the site to run on.
      init:
        # Increase the allowed packet size to 512MB.
        - mysql -e "SET GLOBAL max_allowed_packet=536870912;"
        # Ensure this packet size persists even if MySQL restarts.
        - echo "max_allowed_packet=536870912" >> /etc/mysql/conf.d/tugboat.cnf

      # Commands that import files, databases,  or other assets. When an
      # existing preview is refreshed, the build workflow starts here,
      # skipping the init step, because the results of that step will
      # already be present.
      update:
        - scp -P 8722 ubuntu@172.104.211.92:dbs_tugboat/usc-gov.sql.gz /tmp/database.sql.gz
        - zcat /tmp/database.sql.gz | mysql tugboat
        - rm /tmp/database.sql.gz
